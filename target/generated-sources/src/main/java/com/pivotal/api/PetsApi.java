/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (3.3.4).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.pivotal.api;

import com.pivotal.dto.ErrorDTO;
import com.pivotal.dto.PetDTO;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2019-07-10T16:10:41.727-04:00[America/New_York]")

@Validated
@Api(value = "pets", description = "the pets API")
public interface PetsApi {

    default PetsApiDelegate getDelegate() {
        return new PetsApiDelegate() {};
    }

    @ApiOperation(value = "Create a pet", nickname = "createPets", notes = "", tags={ "pets", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Null response"),
        @ApiResponse(code = 200, message = "unexpected error", response = ErrorDTO.class) })
    @RequestMapping(value = "/pets",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    default ResponseEntity<Void> createPets() {
        return getDelegate().createPets();
    }


    @ApiOperation(value = "List all pets", nickname = "listPets", notes = "", response = PetDTO.class, responseContainer = "List", tags={ "pets", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "A paged array of pets", response = PetDTO.class, responseContainer = "List"),
        @ApiResponse(code = 200, message = "unexpected error", response = ErrorDTO.class) })
    @RequestMapping(value = "/pets",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<List<PetDTO>> listPets(@ApiParam(value = "How many items to return at one time (max 100)") @Valid @RequestParam(value = "limit", required = false) Optional<Integer> limit) {
        return getDelegate().listPets(limit);
    }


    @ApiOperation(value = "Info for a specific pet", nickname = "showPetById", notes = "", response = PetDTO.class, responseContainer = "List", tags={ "pets", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Expected response to a valid request", response = PetDTO.class, responseContainer = "List"),
        @ApiResponse(code = 200, message = "unexpected error", response = ErrorDTO.class) })
    @RequestMapping(value = "/pets/{petId}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<List<PetDTO>> showPetById(@ApiParam(value = "The id of the pet to retrieve",required=true) @PathVariable("petId") String petId) {
        return getDelegate().showPetById(petId);
    }

}
